pub fn match_extension(ext: &str) -> String {
    match ext {
        "aac" => "audio/aac".into(),
        "abw" => "application/x-abiword".into(),
        "arc" => "application/x-freearc".into(),
        "avif" => "image/avif".into(),
        "avi" => "video/x-msvideo".into(),
        "azw" => "application/vnd.amazon.ebook".into(),
        "bin" => "application/octet-stream".into(),
        "bmp" => "image/bmp".into(),
        "bz" => "application/x-bzip".into(),
        "bz2" => "application/x-bzip2".into(),
        "cda" => "application/x-cdf".into(),
        "csh" => "application/x-csh".into(),
        "css" => "text/css".into(),
        "csv" => "text/csv".into(),
        "doc" => "application/msword".into(),
        "docx" => "application/vnd.openxmlformats-officedocument.wordprocessingml.document".into(),
        "eot" => "application/vnd.ms-fontobject".into(),
        "epub" => "application/epub+zip".into(),
        "gz" => "application/gzip".into(),
        "gif" => "image/gif".into(),
        "htm" | "html" => "text/html".into(),
        "ico" => "image/vnd.microsoft.icon".into(),
        "ics" => "text/calendar".into(),
        "jar" => "application/java-archive".into(),
        "jpeg" | "jpg" => "image/jpeg".into(),
        "js" => "text/javascript".into(),
        "json" => "application/json".into(),
        "jsonld" => "application/ld+json".into(),
        "mid" | "midi" => "audio/midi".into(),
        "mjs" => "text/javascript".into(),
        "mp3" => "audio/mpeg".into(),
        "mp4" => "video/mp4".into(),
        "mpeg" => "video/mpeg".into(),
        "mpkg" => "application/vnd.apple.installer+xml".into(),
        "odp" => "application/vnd.oasis.opendocument.presentation".into(),
        "ods" => "application/vnd.oasis.opendocument.spreadsheet".into(),
        "odt" => "application/vnd.oasis.opendocument.text".into(),
        "oga" => "audio/ogg".into(),
        "ogv" => "video/ogg".into(),
        "ogx" => "application/ogg".into(),
        "opus" => "audio/opus".into(),
        "otf" => "font/otf".into(),
        "png" => "image/png".into(),
        "pdf" => "application/pdf".into(),
        "php" => "application/x-httpd-php".into(),
        "ppt" => "application/vnd.ms-powerpoint".into(),
        "pptx" => "application/vnd.openxmlformats-officedocument.presentationml.presentati".into(),
        "rar" => "application/vnd.rar".into(),
        "rtf" => "application/rtf".into(),
        "sh" => "application/x-sh".into(),
        "svg" => "image/svg+xml".into(),
        "tar" => "application/x-tar".into(),
        "tif" | "tiff" => "image/tiff".into(),
        "ts" => "video/mp2t".into(),
        "ttf" => "font/ttf".into(),
        "txt" => "text/plain".into(),
        "vsd" => "application/vnd.visio".into(),
        "wav" => "audio/wav".into(),
        "weba" => "audio/webm".into(),
        "webm" => "video/webm".into(),
        "webp" => "image/webp".into(),
        "woff" => "font/woff".into(),
        "woff2" => "font/woff2".into(),
        "xhtml" => "application/xhtml + xml".into(),
        "xls" => "application/vnd.ms-excel".into(),
        "xlsx" => "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet".into(),
        "xml" => "application/xml".into(),
        _ => "text/html".into(),
    }
}
